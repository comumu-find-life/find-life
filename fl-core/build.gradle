buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id "java-library"
    id "java-test-fixtures"
    id "maven-publish"
}

version 'unspecified'

repositories {
    mavenCentral()
}

bootJar{
    enabled = false
}

jar{ enabled = true}

dependencies {
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    testImplementation 'com.h2database:h2'
    testFixturesRuntimeOnly("com.h2database:h2") // 테스트할때만 불러오는 라이브러리 testRuntimeOnly

//    testFixturesRuntimeOnly("com.h2database:h2")

    implementation 'junit:junit:4.13.1'
}

// [3] Querydsl 설정부
def generated = 'src/main/generated'

// [4] querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// [5] java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// [6] gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}

test {
    useJUnitPlatform()
}